---
- name: Create ServiceNow Incident and Notify Slack
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev181327.service-now.com"
    servicenow_user: "admin"
    servicenow_password: "6kqg0Sr^ZR-V"
    incident_short_description: "Security alert: SQL Injection detected"
    incident_description: "Dynatrace detected a SQL Injection attack on the WebGoat app."
    slack_webhook: "https://hooks.slack.com/services/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"

  tasks:
    - name: Create incident in ServiceNow
      uri:
        url: "{{ servicenow_instance }}/api/now/table/incident"
        method: POST
        user: "{{ servicenow_user }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        validate_certs: no
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body_format: json
        body:
          short_description: "{{ incident_short_description }}"
          description: "{{ incident_description }}"
      register: servicenow_response
      failed_when: servicenow_response.status != 201

    - name: Extract incident number and link
      set_fact:
        incident_number: "{{ servicenow_response.json.result.number }}"
        incident_link: "{{ servicenow_instance }}/nav_to.do?uri=incident.do?sys_id={{ servicenow_response.json.result.sys_id }}"

    - name: Send Slack notification
      uri:
        url: "{{ slack_webhook }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          text: |
            :rotating_light: *New Incident Created*
            *Number:* {{ incident_number }}
            *Description:* {{ incident_short_description }}
            <{{ incident_link }}|View Incident in ServiceNow>
